#!/usr/bin/env -S deno run --allow-read --allow-write

// Generate TypeScript constants from CSS file
const cssContent = Deno.readTextFileSync('src/github-patcher.css');

// Create the TypeScript content with the CSS as a string constant
const tsContent = `// This file is auto-generated by generate-css-constants.ts
// Do not edit manually

export const HIDE_CSS_CONTENT = \`${cssContent}\`;

export const SHOW_CSS_CONTENT = \`/* Override static CSS to show elements when extension is off - using html prefix for higher specificity */
${cssContent.split('\n').map(line => {
  const trimmed = line.trim();
  if (trimmed === '' || trimmed.startsWith('/*') || trimmed.endsWith('*/')) {
    return line;
  }
  // Add html prefix to selector lines (lines ending with comma or {)
  if ((trimmed.endsWith(',') || trimmed.endsWith('{')) && !trimmed.startsWith('html ')) {
    return 'html ' + line;
  }
  // Replace display properties
  if (line.includes('display: none !important')) {
    return line.replace('display: none !important', 'display: revert');
  }
  if (line.includes('display: none')) {
    return line.replace('display: none', 'display: revert');
  }
  return line;
}).join('\n')}\`;
`;

// Write the generated TypeScript file
Deno.writeTextFileSync('src/css-constants.ts', tsContent);

console.log('Generated src/css-constants.ts from src/github-patcher.css');