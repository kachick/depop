#!/usr/bin/env -S deno run --allow-read --allow-write

// Generate CSS files and TypeScript constants from source CSS
const showCssContent = Deno.readTextFileSync('src/github-patcher-show.css');

// Generate github-patcher-hide.css by removing 'html ' prefixes from github-patcher-show.css
const hideCssContent = showCssContent
  .replace(/^html /gm, '') // Remove 'html ' prefix at start of lines
  .replace(/display: revert !important;/g, 'display: none !important;') // Change revert back to none with !important
  .replace(/display: revert;/g, 'display: none;') // Change revert back to none
  .replace('/* Override static CSS to show elements when extension is off - using html prefix for higher specificity */', '/* Hide GitHub elements when extension is active */'); // Update comment for hide CSS

// Write the generated base CSS file
Deno.writeTextFileSync('src/github-patcher-hide.css', hideCssContent);

// Create the TypeScript content with the CSS as string constants
const tsContent = `// This file is auto-generated by generate-css-constants.ts
// Do not edit manually

export const HIDE_CSS_CONTENT = \`${hideCssContent}\`;

export const SHOW_CSS_CONTENT = \`${showCssContent}\`;
`;

// Write the generated TypeScript file
Deno.writeTextFileSync('src/css-constants.ts', tsContent);

console.log('Generated src/github-patcher-hide.css and src/css-constants.ts from src/github-patcher-show.css');